{"ast":null,"code":"var _jsxFileName = \"/Users/uni/Documents/uni/awp/gomoku_react/src/components/UserProvider.tsx\",\n  _s = $RefreshSig$();\nimport { UserContext } from '../context';\nimport { useLocalStorage } from '../hooks';\nimport { post, setToken } from '../utils/http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useLocalStorage('user', undefined);\n  if (user) {\n    setToken(user.token);\n  }\n  const login = async (username, password) => {\n    try {\n      const user = await post('/api/auth/login', {\n        username,\n        password\n      });\n      setUser(user);\n      setToken(user.token);\n      return true;\n    } catch (error) {\n      if (error instanceof Error) {\n        return error.message;\n      }\n      return 'Unable to login right now, please try again!';\n    }\n  };\n  const logout = () => setUser(undefined);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(UserProvider, \"tJ4tCCJLKJXOJkzuW75ZtJ7Q5TU=\", false, function () {\n  return [useLocalStorage];\n});\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["UserContext","useLocalStorage","post","setToken","jsxDEV","_jsxDEV","UserProvider","children","_s","user","setUser","undefined","token","login","username","password","error","Error","message","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/uni/Documents/uni/awp/gomoku_react/src/components/UserProvider.tsx"],"sourcesContent":["import { UserContext } from '../context'\nimport { User, Credential } from '../types'\nimport { useState } from 'react'\nimport { useLocalStorage } from '../hooks'\nimport { post, setToken } from '../utils/http'\n\n\ntype UserProviderProps = {\n    children: React.ReactNode\n  }\n\n  export default function UserProvider({ children }: UserProviderProps) {\n    const [user, setUser] = useLocalStorage<User | undefined>('user',undefined)\n\n    if (user){\n      setToken(user.token)\n  }\n\n  const login = async (username: string, password: string) => {\n    try {\n    const user = await post<Credential, User>('/api/auth/login', {\n    username,\n    password\n    })\n    setUser(user)\n    setToken(user.token)\n    return true\n    } catch(error){\n        if (error instanceof Error) {\n            return error.message\n        }\n        return 'Unable to login right now, please try again!'\n    }  \n}\n    const logout = () => setUser(undefined)\n\n  \n    return (\n        <UserContext.Provider value={{ user, login,logout }}>\n        {children}\n      </UserContext.Provider>\n  )\n}\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,YAAY;AAGxC,SAASC,eAAe,QAAQ,UAAU;AAC1C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAO5C,eAAe,SAASC,YAAYA,CAAC;EAAEC;AAA4B,CAAC,EAAE;EAAAC,EAAA;EACpE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,eAAe,CAAmB,MAAM,EAACU,SAAS,CAAC;EAE3E,IAAIF,IAAI,EAAC;IACPN,QAAQ,CAACM,IAAI,CAACG,KAAK,CAAC;EACxB;EAEA,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,KAAK;IAC1D,IAAI;MACJ,MAAMN,IAAI,GAAG,MAAMP,IAAI,CAAmB,iBAAiB,EAAE;QAC7DY,QAAQ;QACRC;MACA,CAAC,CAAC;MACFL,OAAO,CAACD,IAAI,CAAC;MACbN,QAAQ,CAACM,IAAI,CAACG,KAAK,CAAC;MACpB,OAAO,IAAI;IACX,CAAC,CAAC,OAAMI,KAAK,EAAC;MACV,IAAIA,KAAK,YAAYC,KAAK,EAAE;QACxB,OAAOD,KAAK,CAACE,OAAO;MACxB;MACA,OAAO,8CAA8C;IACzD;EACJ,CAAC;EACG,MAAMC,MAAM,GAAGA,CAAA,KAAMT,OAAO,CAACC,SAAS,CAAC;EAGvC,oBACIN,OAAA,CAACL,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEZ,IAAI;MAAEI,KAAK;MAACM;IAAO,CAAE;IAAAZ,QAAA,EACnDA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE7B;AAACjB,EAAA,CA/ByBF,YAAY;EAAA,QACVL,eAAe;AAAA;AAAAyB,EAAA,GADjBpB,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}