{"ast":null,"code":"var _jsxFileName = \"/Users/uni/Documents/uni/awp/gomoku_react/src/pages/GameHistory.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useLocalStorage } from '../hooks';\nimport { HistoryTile, Button } from '../components';\nimport { useNavigate } from 'react-router-dom';\nimport { PLAYERACTIONTYPE } from '../constants';\nimport { UserContext } from '../context';\nimport { useContext, useState, useReducer } from 'react';\nimport style from './GameHistory.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GameHistory() {\n  _s();\n  const {\n    user,\n    logout\n  } = useContext(UserContext);\n  const [filteredGames, setFilteredGames] = useState([]);\n  const {\n    gameID\n  } = useParams();\n  const [blackMoveGames] = useLocalStorage('blackMoves', {});\n  const [whiteMoveGames] = useLocalStorage('whiteMoves', {});\n  const [games] = useLocalStorage('result', {});\n  const [bs] = useLocalStorage('boardSize', {});\n  const navigate = useNavigate();\n  const [bSelectedTiles, bDispatch] = useReducer(bActionReducer, []);\n  const [wSelectedTiles, wDispatch] = useReducer(wActionReducer, []);\n  if (!gameID) return null;\n  let boardSize = bs[gameID];\n  console.log(boardSize);\n\n  //console.log(blackMoveGames[\"Game:2\"])\n\n  console.log(\"Black Moves\", blackMoveGames[gameID]);\n  console.log(\"White Moves\", whiteMoveGames[gameID]);\n\n  //console.log(gameID)\n\n  function bActionReducer(state, action) {\n    const {\n      type,\n      payload\n    } = action;\n    switch (type) {\n      case PLAYERACTIONTYPE.SELECT_BLACK:\n        return [...state, payload];\n      default:\n        return state;\n    }\n  }\n  function wActionReducer(state, action) {\n    const {\n      type,\n      payload\n    } = action;\n    switch (type) {\n      case PLAYERACTIONTYPE.SELECT_WHITE:\n        return [...state, payload];\n      default:\n        return state;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.title,\n        children: [\"Winner: \", games[gameID]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.row,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.container_game,\n            style: {\n              gridTemplateColumns: `repeat(${boardSize}, 2rem)`\n            },\n            children: [...Array(boardSize * boardSize)].map((_, index) => /*#__PURE__*/_jsxDEV(HistoryTile, {\n              id: index,\n              isBlack: blackMoveGames[gameID].includes(index),\n              isWhite: whiteMoveGames[gameID].includes(index)\n            }, `tile-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 7\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.button,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"    \", /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              onClick: () => navigate(`/gamelog`),\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(GameHistory, \"Ys587N+tC9LrSjVcYpaBPutQ0to=\", false, function () {\n  return [useParams, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useNavigate];\n});\n_c = GameHistory;\nvar _c;\n$RefreshReg$(_c, \"GameHistory\");","map":{"version":3,"names":["useParams","useLocalStorage","HistoryTile","Button","useNavigate","PLAYERACTIONTYPE","UserContext","useContext","useState","useReducer","style","jsxDEV","_jsxDEV","GameHistory","_s","user","logout","filteredGames","setFilteredGames","gameID","blackMoveGames","whiteMoveGames","games","bs","navigate","bSelectedTiles","bDispatch","bActionReducer","wSelectedTiles","wDispatch","wActionReducer","boardSize","console","log","state","action","type","payload","SELECT_BLACK","SELECT_WHITE","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","row","container_game","gridTemplateColumns","Array","map","_","index","id","isBlack","includes","isWhite","button","onClick","_c","$RefreshReg$"],"sources":["/Users/uni/Documents/uni/awp/gomoku_react/src/pages/GameHistory.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\"\nimport { useLocalStorage } from '../hooks'\nimport { HistoryTile, Button } from '../components'\nimport { Navigate, useNavigate, useLocation } from 'react-router-dom'\nimport { TILE_STATUS, PLAYERACTIONTYPE } from '../constants'\n\nimport { UserContext } from '../context'\n\nimport { useContext, useCallback, useState, useEffect , useReducer} from 'react'\nimport { Game } from '../types/Game'\nimport { get } from '../utils/http'\n\nimport style from './GameHistory.module.css'\nimport { type } from 'os'\n\n\ntype SelectAction = {\n\n    type: PLAYERACTIONTYPE\n    payload: number\n\n}\n\nexport default function GameHistory() {\n\n    const { user, logout } = useContext(UserContext)\n\n    const [ filteredGames, setFilteredGames ] = useState<Game[]>([])\n\n    const { gameID } = useParams()\n    const [blackMoveGames] = useLocalStorage<Record<string, number[]>>('blackMoves', {})\n    const [whiteMoveGames] = useLocalStorage<Record<string, number[]>>('whiteMoves', {})\n    const [games] = useLocalStorage<Record<string, string>>('result', {})\n    const [bs] = useLocalStorage<Record<string, number>>('boardSize', {})\n\n    \n    \n    const navigate = useNavigate()\n\n    const [bSelectedTiles, bDispatch] = useReducer(bActionReducer, [])\n    const [wSelectedTiles, wDispatch] = useReducer(wActionReducer, [])\n\n\n    if(!gameID) return null\n\n    let boardSize = bs[gameID]\n    console.log(boardSize)\n\n    //console.log(blackMoveGames[\"Game:2\"])\n\n    console.log(\"Black Moves\",blackMoveGames[gameID])\n    console.log(\"White Moves\",whiteMoveGames[gameID])\n\n\n    //console.log(gameID)\n\n\n    function bActionReducer(state: number[], action: SelectAction) {\n        const { type, payload } = action\n        switch (type) {\n          case PLAYERACTIONTYPE.SELECT_BLACK:\n            return [...state, payload]\n          default:\n            return state\n        }\n      }\n    \n      function wActionReducer(state: number[], action: SelectAction) {\n        const { type, payload } = action\n        switch (type) {\n          case PLAYERACTIONTYPE.SELECT_WHITE:\n            return [...state, payload]\n          default:\n            return state\n        }\n      }\n    \n\n\n  return (\n    <div className={style.container}>\n      \n      <div className={style.container}>\n        <div className={style.title}>\n              Winner: {games[gameID]}\n      \n      </div>\n      <div>\n\n      <div className={style.row}> \n      <div className={style.container_game} style={{ gridTemplateColumns: `repeat(${boardSize}, 2rem)`}}>\n      {[...Array(boardSize * boardSize)].map((_, index) => (\n      <HistoryTile key={`tile-${index}`} id={index} isBlack={blackMoveGames[gameID].includes(index)} isWhite={whiteMoveGames[gameID].includes(index)}/>\n\n        ))}\n      </div>\n      </div>\n      <div className={style.button}>\n        <p>    <Button type=\"submit\" onClick={ () => navigate(`/gamelog`) }>Back</Button></p>\n     \n      </div>\n      </div>\n      </div>\n   \n      </div>\n    \n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}