{"ast":null,"code":"var _jsxFileName = \"/Users/uni/Documents/uni/awp/gomoku_react/src/pages/GameHistory.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { HistoryTile, Button } from '../components';\nimport { useNavigate } from 'react-router-dom';\nimport { PLAYERACTIONTYPE } from '../constants';\nimport { useContext, useCallback, useState, useEffect, useReducer } from 'react';\nimport { UserContext } from '../context';\nimport { get } from '../utils/http';\nimport style from './GameHistory.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GameHistory() {\n  _s();\n  let [bs] = [8, 6];\n  const navigate = useNavigate();\n  const {\n    user,\n    logout\n  } = useContext(UserContext);\n  const [filteredGames, setFilteredGames] = useState();\n  const [boardS, setBoardSize] = useState(0);\n  const [whiteMoves, setWhiteMoves] = useState([]);\n  const [blackMoves, setBlackMoves] = useState([]);\n\n  //const [ gameId, setGameId ] = useState<number>()\n\n  const {\n    gameID\n  } = useParams();\n\n  //const gameID = 1\n\n  console.log(gameID);\n  const fetchGames = useCallback(async () => {\n    try {\n      const getOne = await get(`/api/games/${user === null || user === void 0 ? void 0 : user._id}/${gameID}`);\n      //setResult(getOne?.result)\n      console.log(\"Boardsize: \" + (getOne === null || getOne === void 0 ? void 0 : getOne.boardsize));\n      setBoardSize(getOne === null || getOne === void 0 ? void 0 : getOne.boardsize);\n      setWhiteMoves(getOne === null || getOne === void 0 ? void 0 : getOne.whiteMoves);\n      setBlackMoves(getOne === null || getOne === void 0 ? void 0 : getOne.blackMoves);\n      setStatus(getOne === null || getOne === void 0 ? void 0 : getOne.status);\n    } catch (error) {\n      console.log(error.message);\n      logout();\n      navigate('/');\n    }\n  }, [logout, navigate, user === null || user === void 0 ? void 0 : user._id]);\n  useEffect(() => {\n    if (!user) return;\n    fetchGames();\n  }, [fetchGames, user]);\n\n  //const [blackMoveGames] = useLocalStorage<Record<string, number[]>>('blackMoves', {})\n  //const [whiteMoveGames] = useLocalStorage<Record<string, number[]>>('whiteMoves', {})\n  // const [games] = useLocalStorage<Record<string, string>>('result', {})\n  //const [bs] = useLocalStorage<Record<string, number>>('boardSize', {})\n\n  const blackMoveGames = [1, 2, 3];\n  const whiteMoveGames = [4, 5, 6];\n  const games = \"Blue Wins\";\n  const [bSelectedTiles, bDispatch] = useReducer(bActionReducer, []);\n  const [wSelectedTiles, wDispatch] = useReducer(wActionReducer, []);\n\n  //if(!gameID) return null\n\n  //let boardSize = bs[gameID]\n  let boardSize = boardS;\n  console.log(boardSize);\n\n  //console.log(blackMoveGames[\"Game:2\"])\n\n  console.log(\"Black Moves\", blackMoveGames);\n  console.log(\"White Moves\", whiteMoveGames);\n\n  //console.log(gameID)\n\n  function bActionReducer(state, action) {\n    const {\n      type,\n      payload\n    } = action;\n    switch (type) {\n      case PLAYERACTIONTYPE.SELECT_BLACK:\n        return [...state, payload];\n      default:\n        return state;\n    }\n  }\n  function wActionReducer(state, action) {\n    const {\n      type,\n      payload\n    } = action;\n    switch (type) {\n      case PLAYERACTIONTYPE.SELECT_WHITE:\n        return [...state, payload];\n      default:\n        return state;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.title,\n        children: [\"Winner: \", games]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.row,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.container_game,\n            style: {\n              gridTemplateColumns: `repeat(${boardSize}, 2rem)`\n            },\n            children: [...Array(boardSize * boardSize)].map((_, index) => /*#__PURE__*/_jsxDEV(HistoryTile, {\n              id: index,\n              isBlack: blackMoveGames.includes(index),\n              isWhite: whiteMoveGames.includes(index)\n            }, `tile-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 7\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.button,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"    \", /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              onClick: () => navigate(`/gamelog`),\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(GameHistory, \"+Jqfj7PW38JLhQsbsAIN+vAVpZM=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = GameHistory;\nvar _c;\n$RefreshReg$(_c, \"GameHistory\");","map":{"version":3,"names":["useParams","HistoryTile","Button","useNavigate","PLAYERACTIONTYPE","useContext","useCallback","useState","useEffect","useReducer","UserContext","get","style","jsxDEV","_jsxDEV","GameHistory","_s","bs","navigate","user","logout","filteredGames","setFilteredGames","boardS","setBoardSize","whiteMoves","setWhiteMoves","blackMoves","setBlackMoves","gameID","console","log","fetchGames","getOne","_id","boardsize","setStatus","status","error","message","blackMoveGames","whiteMoveGames","games","bSelectedTiles","bDispatch","bActionReducer","wSelectedTiles","wDispatch","wActionReducer","boardSize","state","action","type","payload","SELECT_BLACK","SELECT_WHITE","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","row","container_game","gridTemplateColumns","Array","map","_","index","id","isBlack","includes","isWhite","button","onClick","_c","$RefreshReg$"],"sources":["/Users/uni/Documents/uni/awp/gomoku_react/src/pages/GameHistory.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\"\nimport { useLocalStorage } from '../hooks'\nimport { HistoryTile, Button } from '../components'\nimport { Navigate, useNavigate, useLocation } from 'react-router-dom'\nimport { TILE_STATUS, PLAYERACTIONTYPE } from '../constants'\n\nimport { useContext, useCallback, useState,useEffect, useReducer } from 'react'\n\nimport { UserContext } from '../context'\n\nimport { get, post, put, del } from '../utils/http'\nimport { Game } from '../types/Game'\n\nimport style from './GameHistory.module.css'\nimport { type } from 'os'\n\n\ntype SelectAction = {\n\n    type: PLAYERACTIONTYPE\n    payload: number\n\n}\n\nexport default function GameHistory() {\n\n\n  let [bs] = [8,6]\n\n  const navigate = useNavigate()\n\n  \n  const { user, logout } = useContext(UserContext)\n  const [ filteredGames, setFilteredGames ] = useState<Game[]>()\n  const [ boardS, setBoardSize ] = useState<any>(0)\n  const [ whiteMoves, setWhiteMoves ] = useState<any[]>([])\n  const [ blackMoves, setBlackMoves ] = useState<any[]>([])\n  \n  //const [ gameId, setGameId ] = useState<number>()\n\n  const { gameID } = useParams()\n\n    //const gameID = 1\n\n    console.log(gameID)\n\n\n    const fetchGames = useCallback(async () => {\n      try{\n        const getOne = await get<Game>(`/api/games/${user?._id}/${gameID}`)\n        //setResult(getOne?.result)\n        console.log(\"Boardsize: \"+getOne?.boardsize)\n        setBoardSize(getOne?.boardsize)\n        setWhiteMoves(getOne?.whiteMoves)\n        setBlackMoves(getOne?.blackMoves)\n        setStatus(getOne?.status)\n      }catch (error){\n        console.log((error as Error).message)\n        logout()\n        navigate('/')\n      }\n    }, [logout, navigate, user?._id])\n  \n    useEffect(() => {\n      if (!user) return\n      fetchGames()\n    }, [fetchGames, user])\n    \n    //const [blackMoveGames] = useLocalStorage<Record<string, number[]>>('blackMoves', {})\n    //const [whiteMoveGames] = useLocalStorage<Record<string, number[]>>('whiteMoves', {})\n   // const [games] = useLocalStorage<Record<string, string>>('result', {})\n    //const [bs] = useLocalStorage<Record<string, number>>('boardSize', {})\n\n    const blackMoveGames = [1,2,3]\n    const whiteMoveGames = [4,5,6]\n    const games = \"Blue Wins\"\n\n    \n\n\n\n\n    \n    \n\n    const [bSelectedTiles, bDispatch] = useReducer(bActionReducer, [])\n    const [wSelectedTiles, wDispatch] = useReducer(wActionReducer, [])\n\n\n    //if(!gameID) return null\n\n    //let boardSize = bs[gameID]\n    let boardSize = boardS\n    console.log(boardSize)\n\n    //console.log(blackMoveGames[\"Game:2\"])\n\n    console.log(\"Black Moves\",blackMoveGames)\n    console.log(\"White Moves\",whiteMoveGames)\n\n\n    //console.log(gameID)\n\n\n    function bActionReducer(state: number[], action: SelectAction) {\n        const { type, payload } = action\n        switch (type) {\n          case PLAYERACTIONTYPE.SELECT_BLACK:\n            return [...state, payload]\n          default:\n            return state\n        }\n      }\n    \n      function wActionReducer(state: number[], action: SelectAction) {\n        const { type, payload } = action\n        switch (type) {\n          case PLAYERACTIONTYPE.SELECT_WHITE:\n            return [...state, payload]\n          default:\n            return state\n        }\n      }\n    \n\n\n  return (\n    <div className={style.container}>\n      \n      <div className={style.container}>\n        <div className={style.title}>\n              Winner: {games}\n      \n      </div>\n      <div>\n\n      <div className={style.row}> \n      <div className={style.container_game} style={{ gridTemplateColumns: `repeat(${boardSize}, 2rem)`}}>\n      {[...Array(boardSize * boardSize)].map((_, index) => (\n      <HistoryTile key={`tile-${index}`} id={index} isBlack={blackMoveGames.includes(index)} isWhite={whiteMoveGames.includes(index)}/>\n\n        ))}\n      </div>\n      </div>\n      <div className={style.button}>\n        <p>    <Button type=\"submit\" onClick={ () => navigate(`/gamelog`) }>Back</Button></p>\n     \n      </div>\n      </div>\n      </div>\n   \n      </div>\n    \n  )\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAE5C,SAASC,WAAW,EAAEC,MAAM,QAAQ,eAAe;AACnD,SAAmBC,WAAW,QAAqB,kBAAkB;AACrE,SAAsBC,gBAAgB,QAAQ,cAAc;AAE5D,SAASC,UAAU,EAAEC,WAAW,EAAEC,QAAQ,EAACC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAE/E,SAASC,WAAW,QAAQ,YAAY;AAExC,SAASC,GAAG,QAAwB,eAAe;AAGnD,OAAOC,KAAK,MAAM,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAW5C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAGpC,IAAI,CAACC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC;EAEhB,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAG9B,MAAM;IAAEgB,IAAI;IAAEC;EAAO,CAAC,GAAGf,UAAU,CAACK,WAAW,CAAC;EAChD,MAAM,CAAEW,aAAa,EAAEC,gBAAgB,CAAE,GAAGf,QAAQ,CAAS,CAAC;EAC9D,MAAM,CAAEgB,MAAM,EAAEC,YAAY,CAAE,GAAGjB,QAAQ,CAAM,CAAC,CAAC;EACjD,MAAM,CAAEkB,UAAU,EAAEC,aAAa,CAAE,GAAGnB,QAAQ,CAAQ,EAAE,CAAC;EACzD,MAAM,CAAEoB,UAAU,EAAEC,aAAa,CAAE,GAAGrB,QAAQ,CAAQ,EAAE,CAAC;;EAEzD;;EAEA,MAAM;IAAEsB;EAAO,CAAC,GAAG7B,SAAS,CAAC,CAAC;;EAE5B;;EAEA8B,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EAGnB,MAAMG,UAAU,GAAG1B,WAAW,CAAC,YAAY;IACzC,IAAG;MACD,MAAM2B,MAAM,GAAG,MAAMtB,GAAG,CAAQ,cAAaQ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEe,GAAI,IAAGL,MAAO,EAAC,CAAC;MACnE;MACAC,OAAO,CAACC,GAAG,CAAC,aAAa,IAACE,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,SAAS,EAAC;MAC5CX,YAAY,CAACS,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,SAAS,CAAC;MAC/BT,aAAa,CAACO,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAER,UAAU,CAAC;MACjCG,aAAa,CAACK,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEN,UAAU,CAAC;MACjCS,SAAS,CAACH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI,MAAM,CAAC;IAC3B,CAAC,QAAOC,KAAK,EAAC;MACZR,OAAO,CAACC,GAAG,CAAEO,KAAK,CAAWC,OAAO,CAAC;MACrCnB,MAAM,CAAC,CAAC;MACRF,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC,EAAE,CAACE,MAAM,EAAEF,QAAQ,EAAEC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEe,GAAG,CAAC,CAAC;EAEjC1B,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,IAAI,EAAE;IACXa,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACA,UAAU,EAAEb,IAAI,CAAC,CAAC;;EAEtB;EACA;EACD;EACC;;EAEA,MAAMqB,cAAc,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAC9B,MAAMC,cAAc,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAC9B,MAAMC,KAAK,GAAG,WAAW;EAUzB,MAAM,CAACC,cAAc,EAAEC,SAAS,CAAC,GAAGnC,UAAU,CAACoC,cAAc,EAAE,EAAE,CAAC;EAClE,MAAM,CAACC,cAAc,EAAEC,SAAS,CAAC,GAAGtC,UAAU,CAACuC,cAAc,EAAE,EAAE,CAAC;;EAGlE;;EAEA;EACA,IAAIC,SAAS,GAAG1B,MAAM;EACtBO,OAAO,CAACC,GAAG,CAACkB,SAAS,CAAC;;EAEtB;;EAEAnB,OAAO,CAACC,GAAG,CAAC,aAAa,EAACS,cAAc,CAAC;EACzCV,OAAO,CAACC,GAAG,CAAC,aAAa,EAACU,cAAc,CAAC;;EAGzC;;EAGA,SAASI,cAAcA,CAACK,KAAe,EAAEC,MAAoB,EAAE;IAC3D,MAAM;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGF,MAAM;IAChC,QAAQC,IAAI;MACV,KAAKhD,gBAAgB,CAACkD,YAAY;QAChC,OAAO,CAAC,GAAGJ,KAAK,EAAEG,OAAO,CAAC;MAC5B;QACE,OAAOH,KAAK;IAChB;EACF;EAEA,SAASF,cAAcA,CAACE,KAAe,EAAEC,MAAoB,EAAE;IAC7D,MAAM;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGF,MAAM;IAChC,QAAQC,IAAI;MACV,KAAKhD,gBAAgB,CAACmD,YAAY;QAChC,OAAO,CAAC,GAAGL,KAAK,EAAEG,OAAO,CAAC;MAC5B;QACE,OAAOH,KAAK;IAChB;EACF;EAIJ,oBACEpC,OAAA;IAAK0C,SAAS,EAAE5C,KAAK,CAAC6C,SAAU;IAAAC,QAAA,eAE9B5C,OAAA;MAAK0C,SAAS,EAAE5C,KAAK,CAAC6C,SAAU;MAAAC,QAAA,gBAC9B5C,OAAA;QAAK0C,SAAS,EAAE5C,KAAK,CAAC+C,KAAM;QAAAD,QAAA,GAAC,UACf,EAAChB,KAAK;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjB,CAAC,eACNjD,OAAA;QAAA4C,QAAA,gBAEA5C,OAAA;UAAK0C,SAAS,EAAE5C,KAAK,CAACoD,GAAI;UAAAN,QAAA,eAC1B5C,OAAA;YAAK0C,SAAS,EAAE5C,KAAK,CAACqD,cAAe;YAACrD,KAAK,EAAE;cAAEsD,mBAAmB,EAAG,UAASjB,SAAU;YAAQ,CAAE;YAAAS,QAAA,EACjG,CAAC,GAAGS,KAAK,CAAClB,SAAS,GAAGA,SAAS,CAAC,CAAC,CAACmB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAChDxD,OAAA,CAACb,WAAW;cAAuBsE,EAAE,EAAED,KAAM;cAACE,OAAO,EAAEhC,cAAc,CAACiC,QAAQ,CAACH,KAAK,CAAE;cAACI,OAAO,EAAEjC,cAAc,CAACgC,QAAQ,CAACH,KAAK;YAAE,GAA5G,QAAOA,KAAM,EAAC;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA+F,CAE7H;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNjD,OAAA;UAAK0C,SAAS,EAAE5C,KAAK,CAAC+D,MAAO;UAAAjB,QAAA,eAC3B5C,OAAA;YAAA4C,QAAA,GAAG,MAAI,eAAA5C,OAAA,CAACZ,MAAM;cAACkD,IAAI,EAAC,QAAQ;cAACwB,OAAO,EAAGA,CAAA,KAAM1D,QAAQ,CAAE,UAAS,CAAG;cAAAwC,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAElF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAGZ;AAAC/C,EAAA,CAlIuBD,WAAW;EAAA,QAKhBZ,WAAW,EAWTH,SAAS;AAAA;AAAA6E,EAAA,GAhBN9D,WAAW;AAAA,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}