{"ast":null,"code":"var _jsxFileName = \"/Users/uni/Documents/uni/awp/gomoku_react/src/pages/Home.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback, useEffect, useRef } from \"react\";\nimport { Input, Button } from '../components';\nimport { useNavigate } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { UserContext } from '../context';\nimport style from './Home.module.css';\nimport { get, post } from '../utils/http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  //const { user } = useContext(UserContext)\n  const [boardSize, setBoardSize] = useState('');\n  //const navigate = useNavigate()\n  const boardSizeInput = useRef(null);\n  const {\n    user,\n    logout\n  } = useContext(UserContext);\n  const [filteredGames, setFilteredGames] = useState([]);\n\n  //const [games] = useLocalStorage<Record<string, string>>('result', {})\n  const navigate = useNavigate();\n  const postGameToDB = async inputBS => {\n    let winner = \"\";\n    winner = \"Current Player: White\";\n    if (user) {\n      const res = await post(`/api/games/${user === null || user === void 0 ? void 0 : user._id}`, {\n        //userId: user._id,\n        gameId: filteredGames.length + 1,\n        boardsize: inputBS,\n        result: winner,\n        whiteMoves: [],\n        blackMoves: [],\n        status: \"empty\",\n        date: new Date().toLocaleDateString()\n      });\n      return res;\n    }\n  };\n  const fetchGames = useCallback(async () => {\n    try {\n      const userGames = await get(`/api/games/${user === null || user === void 0 ? void 0 : user._id}`);\n      setFilteredGames(userGames);\n    } catch (error) {\n      console.log(error.message);\n      logout();\n      navigate('/');\n    }\n  }, [logout, navigate, user === null || user === void 0 ? void 0 : user._id]);\n  useEffect(() => {\n    if (!user) return;\n    fetchGames();\n  }, [fetchGames, user]);\n  function handleOnClick() {\n    let bs = boardSize;\n    if (!user) {\n      navigate(`/loginpage`);\n    } else if (bs > 4 && bs <= 20) {\n      window.alert(filteredGames.length);\n      const response = postGameToDB(bs);\n      navigate(`/maingame/${bs}`);\n    } else if (bs !== null) {\n      window.alert(\"Please enter a value between 5-20\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: boardSizeInput,\n      name: \"board-size\",\n      placeholder: \"  Board Size\",\n      value: boardSize,\n      onChange: b => {\n        setBoardSize(b.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !boardSize,\n      onClick: handleOnClick,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"QN+KfpjsQ299Vvd3mp9+ikAfHtY=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useCallback","useEffect","useRef","Input","Button","useNavigate","useContext","UserContext","style","get","post","jsxDEV","_jsxDEV","Home","_s","boardSize","setBoardSize","boardSizeInput","user","logout","filteredGames","setFilteredGames","navigate","postGameToDB","inputBS","winner","res","_id","gameId","length","boardsize","result","whiteMoves","blackMoves","status","date","Date","toLocaleDateString","fetchGames","userGames","error","console","log","message","handleOnClick","bs","window","alert","response","className","container","children","ref","name","placeholder","value","onChange","b","target","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/uni/Documents/uni/awp/gomoku_react/src/pages/Home.tsx"],"sourcesContent":["import { useState, useCallback, useEffect, useRef } from \"react\"\nimport { Input, Button } from '../components'\nimport { useNavigate } from 'react-router-dom'\nimport { useContext } from 'react'\nimport { UserContext } from '../context'\nimport style from './Home.module.css'\n\nimport { Game } from '../types/Game'\nimport { get, post } from '../utils/http'\n\nexport default function Home() {\n\n  \n    //const { user } = useContext(UserContext)\n    const [boardSize, setBoardSize] = useState('')\n    //const navigate = useNavigate()\n    const boardSizeInput = useRef<HTMLInputElement | null>(null)\n\n\n\n    const { user, logout } = useContext(UserContext)\n    const [ filteredGames, setFilteredGames ] = useState<Game[]>([])\n\n\n    //const [games] = useLocalStorage<Record<string, string>>('result', {})\n    const navigate = useNavigate()\n\n\n    const postGameToDB  = async (inputBS: number | undefined) => {\n      let winner:string = \"\"\n      winner = \"Current Player: White\"\n      if (user){\n        const res = await post (`/api/games/${user?._id}`, {\n          //userId: user._id,\n          gameId: filteredGames.length+1,\n          boardsize: inputBS,\n          result: winner,\n          whiteMoves: [],\n          blackMoves: [],\n          status: \"empty\",\n          date: new Date().toLocaleDateString()\n        })\n        return res\n      }\n    }\n\n\n\n    const fetchGames = useCallback(async () => {\n    try{\n      const userGames = await get<Game[]>(`/api/games/${user?._id}`)\n      setFilteredGames(userGames)\n    }catch (error){\n      console.log((error as Error).message)\n      logout()\n      navigate('/')\n    }\n  }, [logout, navigate, user?._id])\n\n  useEffect(() => {\n    if (!user) return\n    fetchGames()\n  }, [fetchGames, user])\n\n\n\n\n    \n\n    function handleOnClick() {\n        let bs: unknown = boardSize\n        if (!user) {\n            navigate(`/loginpage`);\n    }\n        else if ((bs as number) > 4 && (bs as number) <= 20){\n\n          window.alert(filteredGames.length)\n\n          const response = postGameToDB(bs as number)\n\n          \n\n\n          navigate(`/maingame/${bs}`);\n\n            \n    }\n        else if ((bs as string) !== null){\n            window.alert(\"Please enter a value between 5-20\")\n  }\n}\n\n\n  return (\n    \n    <div className={style.container}>\n     <Input ref = {boardSizeInput} name=\"board-size\" placeholder=\"  Board Size\" value={boardSize} onChange={(b) => {\n        setBoardSize(b.target.value)}}/>\n        <Button type=\"submit\" disabled={!boardSize} onClick={ handleOnClick }>Start</Button>\n        </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}