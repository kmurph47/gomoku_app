{"ast":null,"code":"var _jsxFileName = \"/Users/uni/Documents/uni/awp/gomoku_react/src/pages/MainGame.tsx\",\n  _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport { Tile } from '../components';\nimport { PLAYERACTIONTYPE } from '../constants';\nimport { useLocalStorage } from '../hooks';\nimport style from './MainGame.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction bActionReducer(state, action) {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case PLAYERACTIONTYPE.SELECT_BLACK:\n      return [...state, payload];\n    default:\n      return state;\n  }\n}\nfunction wActionReducer(state, action) {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case PLAYERACTIONTYPE.SELECT_WHITE:\n      return [...state, payload];\n    default:\n      return state;\n  }\n}\nexport default function MainGame() {\n  _s();\n  const [bSelectedTiles, bDispatch] = useReducer(bActionReducer, []);\n  const [wSelectedTiles, wDispatch] = useReducer(wActionReducer, []);\n  const [selectedGamesBlackMoves, saveBlackMoves] = useLocalStorage('blackMoves', {});\n  const [selectedGamesWhiteMoves, saveWhiteMoves] = useLocalStorage('whiteMoves', {});\n  const moveNumber = bSelectedTiles.length + wSelectedTiles.length;\n  let res = \"Black Turn\";\n  let gameOver = false;\n  if (checkIfWinner(bSelectedTiles)) {\n    res = 'Black Wins';\n    gameOver = true;\n  } else if (checkIfWinner(wSelectedTiles)) {\n    res = 'White Wins';\n    gameOver = true;\n  } else {\n    if (moveNumber % 2 === 0) res = 'Black Turn';else res = 'White Turn';\n  }\n  const gameID = Object.keys(selectedGamesBlackMoves).length + 1;\n\n  //const gameID = selectedGamesBlackMoves\n\n  const handleConfirmClick = async () => {\n    saveBlackMoves({\n      ...selectedGamesBlackMoves,\n      ['Game:' + gameID]: bSelectedTiles\n    });\n    saveWhiteMoves({\n      ...selectedGamesWhiteMoves,\n      ['Game:' + gameID]: wSelectedTiles\n    });\n    console.log(\"Black Moves: \", bSelectedTiles);\n    console.log(\"White Moves: \", wSelectedTiles);\n    console.log(gameID);\n    console.log(checkIfWinner(bSelectedTiles));\n  };\n\n  //const { size } = 9\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.gameSpace,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.title,\n      children: [\" \", res, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.tile,\n      style: {\n        gridTemplateColumns: `repeat(${parseInt(\"6\")}, 1fr)`\n      },\n      children: [...Array(parseInt('6') * parseInt('6'))].map((_, index) => /*#__PURE__*/_jsxDEV(Tile, {\n        id: index,\n        onSelectBlack: () => bDispatch({\n          type: PLAYERACTIONTYPE.SELECT_BLACK,\n          payload: index\n        }),\n        onSelectWhite: () => wDispatch({\n          type: PLAYERACTIONTYPE.SELECT_WHITE,\n          payload: index\n        }),\n        moveNumber: bSelectedTiles.length + wSelectedTiles.length,\n        gameOver: gameOver\n      }, `tile-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.button,\n      onClick: handleConfirmClick,\n      children: \"Save Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n// SET NUMBER OF ROWS AND COLUMNS HERE.\n_s(MainGame, \"ewi/JSnfXmagfKzB2fEYZ8J4zvE=\", false, function () {\n  return [useLocalStorage, useLocalStorage];\n});\n_c = MainGame;\nlet rows = 6;\nlet cols = 6;\n// Various check for winner functions.\nfunction checkIfWinner(board) {\n  // Horizontal \n  for (let j = 0; j < cols * (rows - 1); j = j + cols) {\n    for (let i = 0; i < cols - 4; i++) {\n      if (board.includes(j + i) && board.includes(j + i + 1) && board.includes(j + i + 2) && board.includes(j + i + 3) && board.includes(j + i + 4)) {\n        return true;\n      }\n    }\n  }\n\n  // Vertical \n  for (let j = 0; j < cols; j++) {\n    for (let i = 0; i < rows * (cols - 4); i = i + cols) {\n      if (board.includes(j + i) && board.includes(j + i + cols) && board.includes(j + i + 2 * cols) && board.includes(j + i + 3 * cols) && board.includes(j + i + 4 * cols)) {\n        return true;\n      }\n    }\n  }\n\n  // Diagonal down \n  for (let j = 0; j < cols - 4; j++) {\n    for (let i = 0; i < rows * (cols - 4); i = i + cols) {\n      if (board.includes(j + i) && board.includes(j + 1 + (i + cols)) && board.includes(j + 2 + (i + cols * 2)) && board.includes(j + 3 + (i + cols * 3)) && board.includes(j + 4 + (i + cols * 4))) {\n        return true;\n      }\n    }\n  }\n\n  // Diagonal up \n  for (let j = 0; j < cols - 4; j++) {\n    for (let i = 4 * cols; i < rows * cols; i = i + cols) {\n      if (board.includes(j + i) && board.includes(j + 1 + (i - cols)) && board.includes(j + 2 + (i - cols * 2)) && board.includes(j + 3 + (i - cols * 3)) && board.includes(j + 4 + (i - cols * 4))) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nvar _c;\n$RefreshReg$(_c, \"MainGame\");","map":{"version":3,"names":["useReducer","Tile","PLAYERACTIONTYPE","useLocalStorage","style","jsxDEV","_jsxDEV","bActionReducer","state","action","type","payload","SELECT_BLACK","wActionReducer","SELECT_WHITE","MainGame","_s","bSelectedTiles","bDispatch","wSelectedTiles","wDispatch","selectedGamesBlackMoves","saveBlackMoves","selectedGamesWhiteMoves","saveWhiteMoves","moveNumber","length","res","gameOver","checkIfWinner","gameID","Object","keys","handleConfirmClick","console","log","className","gameSpace","children","title","fileName","_jsxFileName","lineNumber","columnNumber","tile","gridTemplateColumns","parseInt","Array","map","_","index","id","onSelectBlack","onSelectWhite","button","onClick","_c","rows","cols","board","j","i","includes","$RefreshReg$"],"sources":["/Users/uni/Documents/uni/awp/gomoku_react/src/pages/MainGame.tsx"],"sourcesContent":["import { useContext, useState, useReducer } from 'react'\nimport { Navigate, useNavigate, useLocation } from 'react-router-dom'\nimport { UserContext } from '../context'\nimport { Tile, Button } from '../components'\nimport { TILE_STATUS, PLAYERACTIONTYPE } from '../constants'\nimport { useLocalStorage } from '../hooks'\n\nimport style from './MainGame.module.css'\nimport { type } from 'os'\n\n\ntype SelectAction = {\n\n    type: PLAYERACTIONTYPE\n    payload: number\n\n}\n\nfunction bActionReducer(state: number[], action: SelectAction) {\n    const { type, payload } = action\n    switch (type) {\n      case PLAYERACTIONTYPE.SELECT_BLACK:\n        return [...state, payload]\n      default:\n        return state\n    }\n  }\n\n  function wActionReducer(state: number[], action: SelectAction) {\n    const { type, payload } = action\n    switch (type) {\n      case PLAYERACTIONTYPE.SELECT_WHITE:\n        return [...state, payload]\n      default:\n        return state\n    }\n  }\n\n\n\n\nexport default function MainGame() {\n\n\n    \n    \n    const [bSelectedTiles, bDispatch] = useReducer(bActionReducer, [])\n    const [wSelectedTiles, wDispatch] = useReducer(wActionReducer, [])\n    const [selectedGamesBlackMoves, saveBlackMoves] = useLocalStorage<Record<string, any[]>>('blackMoves', {})\n    const [selectedGamesWhiteMoves, saveWhiteMoves] = useLocalStorage<Record<string, any[]>>('whiteMoves', {})\n\n    const moveNumber = bSelectedTiles.length + wSelectedTiles.length\n\n    let res = \"Black Turn\"\n    let gameOver: boolean = false;\n\n    if(checkIfWinner(bSelectedTiles)) {\n        res = 'Black Wins'\n        gameOver = true\n    }\n    else if(checkIfWinner(wSelectedTiles)) {\n        res = 'White Wins'\n        gameOver = true\n    } else {\n\n        if (moveNumber % 2 === 0 ) res = 'Black Turn'\n        else res = 'White Turn'\n\n    }\n\n\n            \n\n\n    \n\n    const gameID = Object.keys(selectedGamesBlackMoves).length + 1\n\n    \n\n    //const gameID = selectedGamesBlackMoves\n\n    const handleConfirmClick = async () => {\n\n\n\n        saveBlackMoves({... selectedGamesBlackMoves, ['Game:'+gameID]:bSelectedTiles})\n        saveWhiteMoves({... selectedGamesWhiteMoves, ['Game:'+gameID]:wSelectedTiles})\n        console.log(\"Black Moves: \",bSelectedTiles)\n        console.log(\"White Moves: \",wSelectedTiles)\n        console.log(gameID)\n        console.log(checkIfWinner(bSelectedTiles))\n        \n\n    }\n\n    //const { size } = 9\n  return (\n\n    \n    <div className={style.gameSpace}>\n        \n        <div className={style.title}> {res} </div>\n\n        <div className={style.tile} style={{ gridTemplateColumns: `repeat(${parseInt(\"6\")}, 1fr)`}}>\n        {[...Array(parseInt('6') * parseInt('6'))].map((_, index) => (\n            <Tile key={`tile-${index}`} id={index} onSelectBlack={() => bDispatch({ type: PLAYERACTIONTYPE.SELECT_BLACK, payload: index})} onSelectWhite={() => wDispatch({ type: PLAYERACTIONTYPE.SELECT_WHITE, payload: index})} moveNumber={bSelectedTiles.length + wSelectedTiles.length} gameOver={ gameOver} />))}\n            \n            \n            </div>\n\n        \n      <button className={style.button} onClick={handleConfirmClick}>\n        Save Game\n      </button>\n            \n\n</div>\n\n  )\n}\n// SET NUMBER OF ROWS AND COLUMNS HERE.\nlet rows: number = 6;\nlet cols: number = 6;\n// Various check for winner functions.\nfunction checkIfWinner(board: Array<number>) {\n    // Horizontal \n    for (let j = 0; j < cols*(rows-1); j=j+cols) {\n\n      for (let i = 0; i < cols-4; i++) {\n        if (\n            board.includes(j+i) &&\n            board.includes(j+i+1) &&\n            board.includes(j+i+2) &&\n            board.includes(j+i+3) &&\n            board.includes(j+i+4)\n        ) {\n          return true\n        }\n      }\n    }\n\n\n\n    // Vertical \n    for (let j = 0; j < cols; j++) {\n\n      for (let i = 0; i < rows*(cols-4); i=i+cols) {\n\n        if (\n            board.includes(j+i) &&\n            board.includes(j+i+cols) &&\n            board.includes(j+i+2*cols) &&\n            board.includes(j+i+3*cols) &&\n            board.includes(j+i+4*cols)\n        ) {\n          return true\n        }\n      }\n    }\n\n    // Diagonal down \n    for (let j = 0; j < cols-4; j++) {\n\n        for (let i = 0; i < rows*(cols-4); i=i+cols) {\n\n  \n          if (\n              board.includes(j+i) &&\n              board.includes(j+1+(i+cols)) &&\n              board.includes(j+2+(i+cols*2)) &&\n              board.includes(j+3+(i+cols*3)) &&\n              board.includes(j+4+(i+cols*4))\n          ) {\n            return true\n          }\n        }\n      }  \n\n          // Diagonal up \n    for (let j = 0; j < cols-4; j++) {\n\n        \n\n        for (let i = 4*cols; i < rows*(cols); i=i+cols) {\n\n\n  \n          if (\n              board.includes(j+i) &&\n              board.includes(j+1+(i-cols)) &&\n              board.includes(j+2+(i-cols*2)) &&\n              board.includes(j+3+(i-cols*3)) &&\n              board.includes(j+4+(i-cols*4))\n          ) {\n            return true\n          }\n        }\n      }  \n  \n    return false\n  }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}