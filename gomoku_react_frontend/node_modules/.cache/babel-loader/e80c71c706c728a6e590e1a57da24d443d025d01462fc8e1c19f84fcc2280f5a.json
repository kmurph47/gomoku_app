{"ast":null,"code":"export default async function http(request) {\n  var _headers$get;\n  const response = await fetch(request);\n  if (!response.ok) {\n    throw new Error(await response.text());\n  }\n  const headers = response.headers;\n  const data = (_headers$get = headers.get('content-type')) !== null && _headers$get !== void 0 && _headers$get.includes('json') ? await response.json() : {};\n  return data;\n}\nlet token = '';\nexport const setToken = newToken => token = newToken;\nexport async function get(path) {\n  return await http(new Request(path, {\n    headers: {\n      ...(token && {\n        Authorization: `Bearer ${token}`\n      }),\n      'Content-Type': 'application/json'\n    },\n    method: 'get'\n  }));\n}\nexport async function put(path, body) {\n  return await http(new Request(path, {\n    headers: {\n      ...(token && {\n        Authorization: `Bearer ${token}`\n      }),\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body),\n    method: 'put'\n  }));\n}\nexport async function post(path, body) {\n  return await http(new Request(path, {\n    headers: {\n      ...(token && {\n        Authorization: `Bearer ${token}`\n      }),\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body),\n    method: 'post'\n  }));\n}\nexport async function del(path) {\n  return await http(new Request(path, {\n    headers: {\n      ...(token && {\n        Authorization: `Bearer ${token}`\n      }),\n      'Content-Type': 'application/json'\n    },\n    method: 'delete'\n  }));\n}","map":{"version":3,"names":["http","request","_headers$get","response","fetch","ok","Error","text","headers","data","get","includes","json","token","setToken","newToken","path","Request","Authorization","method","put","body","JSON","stringify","post","del"],"sources":["/Users/uni/Documents/uni/awp/gomoku_react/src/utils/http.ts"],"sourcesContent":["export default async function http<T>(request: RequestInfo): Promise<T> {\n    const response = await fetch(request)\n    if (!response.ok) {\n      throw new Error(await response.text())\n    }\n    const headers = response.headers\n    const data = headers.get('content-type')?.includes('json')\n      ? await response.json()\n      : {}\n    return data\n  }\n  \n  let token = ''\n  export const setToken = (newToken: string) => (token = newToken)\n  export async function get<Res>(path: string): Promise<Res> {\n    return await http<Res>(\n      new Request(path, {\n        headers: {\n          ...(token && { Authorization: `Bearer ${token}` }),\n          'Content-Type': 'application/json',\n        },\n        method: 'get',\n      })\n    )\n  }\n  \n  export async function put<Req, Res>(path: string, body: Req): Promise<Res> {\n    return await http<Res>(\n      new Request(path, {\n        headers: {\n          ...(token && { Authorization: `Bearer ${token}` }),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n        method: 'put',\n      })\n      \n    )\n  }\n  \n  export async function post<Req, Res>(path: string, body: Req): Promise<Res> {\n    return await http<Res>(\n      new Request(path, {\n        headers: {\n          ...(token && { Authorization: `Bearer ${token}` }),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n        method: 'post',\n      })\n    )\n  }\n  \n  export async function del(path: string): Promise<undefined | null> {\n    return await http<undefined | null>(\n      new Request(path, {\n        headers: {\n          ...(token && { Authorization: `Bearer ${token}` }),\n          'Content-Type': 'application/json',\n        },\n        method: 'delete',\n      })\n    )\n  }"],"mappings":"AAAA,eAAe,eAAeA,IAAIA,CAAIC,OAAoB,EAAc;EAAA,IAAAC,YAAA;EACpE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC;EACrC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;EACxC;EACA,MAAMC,OAAO,GAAGL,QAAQ,CAACK,OAAO;EAChC,MAAMC,IAAI,GAAG,CAAAP,YAAA,GAAAM,OAAO,CAACE,GAAG,CAAC,cAAc,CAAC,cAAAR,YAAA,eAA3BA,YAAA,CAA6BS,QAAQ,CAAC,MAAM,CAAC,GACtD,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC,GACrB,CAAC,CAAC;EACN,OAAOH,IAAI;AACb;AAEA,IAAII,KAAK,GAAG,EAAE;AACd,OAAO,MAAMC,QAAQ,GAAIC,QAAgB,IAAMF,KAAK,GAAGE,QAAS;AAChE,OAAO,eAAeL,GAAGA,CAAMM,IAAY,EAAgB;EACzD,OAAO,MAAMhB,IAAI,CACf,IAAIiB,OAAO,CAACD,IAAI,EAAE;IAChBR,OAAO,EAAE;MACP,IAAIK,KAAK,IAAI;QAAEK,aAAa,EAAG,UAASL,KAAM;MAAE,CAAC,CAAC;MAClD,cAAc,EAAE;IAClB,CAAC;IACDM,MAAM,EAAE;EACV,CAAC,CACH,CAAC;AACH;AAEA,OAAO,eAAeC,GAAGA,CAAWJ,IAAY,EAAEK,IAAS,EAAgB;EACzE,OAAO,MAAMrB,IAAI,CACf,IAAIiB,OAAO,CAACD,IAAI,EAAE;IAChBR,OAAO,EAAE;MACP,IAAIK,KAAK,IAAI;QAAEK,aAAa,EAAG,UAASL,KAAM;MAAE,CAAC,CAAC;MAClD,cAAc,EAAE;IAClB,CAAC;IACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC;IAC1BF,MAAM,EAAE;EACV,CAAC,CAEH,CAAC;AACH;AAEA,OAAO,eAAeK,IAAIA,CAAWR,IAAY,EAAEK,IAAS,EAAgB;EAC1E,OAAO,MAAMrB,IAAI,CACf,IAAIiB,OAAO,CAACD,IAAI,EAAE;IAChBR,OAAO,EAAE;MACP,IAAIK,KAAK,IAAI;QAAEK,aAAa,EAAG,UAASL,KAAM;MAAE,CAAC,CAAC;MAClD,cAAc,EAAE;IAClB,CAAC;IACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC;IAC1BF,MAAM,EAAE;EACV,CAAC,CACH,CAAC;AACH;AAEA,OAAO,eAAeM,GAAGA,CAACT,IAAY,EAA6B;EACjE,OAAO,MAAMhB,IAAI,CACf,IAAIiB,OAAO,CAACD,IAAI,EAAE;IAChBR,OAAO,EAAE;MACP,IAAIK,KAAK,IAAI;QAAEK,aAAa,EAAG,UAASL,KAAM;MAAE,CAAC,CAAC;MAClD,cAAc,EAAE;IAClB,CAAC;IACDM,MAAM,EAAE;EACV,CAAC,CACH,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}