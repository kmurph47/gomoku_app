{"ast":null,"code":"var _jsxFileName = \"/Users/uni/Documents/uni/awp/gomoku_react/src/components/Tile.tsx\",\n  _s = $RefreshSig$();\nimport style from \"./Tile.module.css\";\nimport { useState } from 'react';\nimport { TILE_STATUS } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tile(props) {\n  _s();\n  const {\n    id,\n    onSelectBlack,\n    onSelectWhite,\n    moveNumber,\n    gameOver\n  } = props;\n  const [status, setStatus] = useState(TILE_STATUS.AVAILABLE);\n\n  //console.log(moveNumber)\n\n  const getClassName = () => {\n    const className = style.tile;\n    if (status !== null && status !== undefined) {\n      switch (status) {\n        case TILE_STATUS.AVAILABLE:\n          return `${className} ${style.available}`;\n        case TILE_STATUS.BLACK:\n          return `${className} ${style.black}`;\n        case TILE_STATUS.WHITE:\n          return `${className} ${style.white}`;\n        default:\n          return className;\n      }\n    }\n  };\n  const HandleClick = () => {\n    if (status === TILE_STATUS.AVAILABLE && gameOver !== true) {\n      if (moveNumber % 2 === 0) {\n        setStatus(TILE_STATUS.BLACK);\n        onSelectBlack();\n      } else if (moveNumber % 2 !== 0) {\n        setStatus(TILE_STATUS.WHITE);\n        onSelectWhite();\n      }\n      //console.log(\"selected T=tile:\", id)\n      //console.log(\"Default Status:\",status[id])\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getClassName(),\n    onClick: HandleClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(Tile, \"JkWT5rmEUSyI9GQ4SVg5d3odLOM=\");\n_c = Tile;\nvar _c;\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"names":["style","useState","TILE_STATUS","jsxDEV","_jsxDEV","Tile","props","_s","id","onSelectBlack","onSelectWhite","moveNumber","gameOver","status","setStatus","AVAILABLE","getClassName","className","tile","undefined","available","BLACK","black","WHITE","white","HandleClick","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/uni/Documents/uni/awp/gomoku_react/src/components/Tile.tsx"],"sourcesContent":["\nimport style from \"./Tile.module.css\"\nimport { useState, memo, useEffect, useReducer } from 'react'\nimport { TILE_STATUS } from '../constants'\n\ntype TileProps = {\n    id: number\n    onSelectBlack: () => void\n    onSelectWhite: () => void\n    moveNumber: number\n    gameOver: Boolean\n    \n\n}\n\nexport default function Tile(props: TileProps) {\n    const { id, onSelectBlack, onSelectWhite, moveNumber, gameOver  } = props \n    const [status, setStatus] = useState(TILE_STATUS.AVAILABLE)\n\n    //console.log(moveNumber)\n\n           \n    \n\n    const getClassName = () => {\n        \n        const className = style.tile\n        if (status !== null && status !== undefined){\n            \n        switch(status) {\n            case TILE_STATUS.AVAILABLE:\n                return `${className} ${style.available}`\n            case TILE_STATUS.BLACK:\n                return `${className} ${style.black}`\n            case TILE_STATUS.WHITE:\n                return `${className} ${style.white}`\n            default:\n                return className\n        }\n        }\n    }\n\n\n    const HandleClick = () => {\n        if (status === TILE_STATUS.AVAILABLE && gameOver  !== true){\n\n            if (moveNumber % 2 === 0){\n                setStatus(TILE_STATUS.BLACK)\n                onSelectBlack()\n\n\n            } else if (moveNumber % 2 !== 0) {\n\n                setStatus(TILE_STATUS.WHITE)\n                onSelectWhite()\n\n\n            }\n           //console.log(\"selected T=tile:\", id)\n           //console.log(\"Default Status:\",status[id])\n           \n        } \n     }\n\n\n\n\n\n\n  \n    return (\n\n        <div className={getClassName()} onClick={HandleClick}/>\n  )\n}\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,mBAAmB;AACrC,SAASC,QAAQ,QAAqC,OAAO;AAC7D,SAASC,WAAW,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAY1C,eAAe,SAASC,IAAIA,CAACC,KAAgB,EAAE;EAAAC,EAAA;EAC3C,MAAM;IAAEC,EAAE;IAAEC,aAAa;IAAEC,aAAa;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAGN,KAAK;EACzE,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAACC,WAAW,CAACa,SAAS,CAAC;;EAE3D;;EAKA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IAEvB,MAAMC,SAAS,GAAGjB,KAAK,CAACkB,IAAI;IAC5B,IAAIL,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAKM,SAAS,EAAC;MAE5C,QAAON,MAAM;QACT,KAAKX,WAAW,CAACa,SAAS;UACtB,OAAQ,GAAEE,SAAU,IAAGjB,KAAK,CAACoB,SAAU,EAAC;QAC5C,KAAKlB,WAAW,CAACmB,KAAK;UAClB,OAAQ,GAAEJ,SAAU,IAAGjB,KAAK,CAACsB,KAAM,EAAC;QACxC,KAAKpB,WAAW,CAACqB,KAAK;UAClB,OAAQ,GAAEN,SAAU,IAAGjB,KAAK,CAACwB,KAAM,EAAC;QACxC;UACI,OAAOP,SAAS;MACxB;IACA;EACJ,CAAC;EAGD,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIZ,MAAM,KAAKX,WAAW,CAACa,SAAS,IAAIH,QAAQ,KAAM,IAAI,EAAC;MAEvD,IAAID,UAAU,GAAG,CAAC,KAAK,CAAC,EAAC;QACrBG,SAAS,CAACZ,WAAW,CAACmB,KAAK,CAAC;QAC5BZ,aAAa,CAAC,CAAC;MAGnB,CAAC,MAAM,IAAIE,UAAU,GAAG,CAAC,KAAK,CAAC,EAAE;QAE7BG,SAAS,CAACZ,WAAW,CAACqB,KAAK,CAAC;QAC5Bb,aAAa,CAAC,CAAC;MAGnB;MACD;MACA;IAEH;EACH,CAAC;;EAQF,oBAEIN,OAAA;IAAKa,SAAS,EAAED,YAAY,CAAC,CAAE;IAACU,OAAO,EAAED;EAAY;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAE/D;AAACvB,EAAA,CA3DuBF,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}