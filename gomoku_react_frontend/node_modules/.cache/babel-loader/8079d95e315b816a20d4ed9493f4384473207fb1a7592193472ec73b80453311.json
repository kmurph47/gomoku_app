{"ast":null,"code":"var _jsxFileName = \"/Users/uni/Documents/uni/awp/gomoku_react/src/pages/MainGame.tsx\",\n  _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport { Tile } from '../components';\nimport { PLAYERACTIONTYPE } from '../constants';\nimport style from './MainGame.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction actionReducer(state, action) {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case PLAYERACTIONTYPE.SELECT_BLACK:\n      return [...state, payload];\n    default:\n      return state;\n  }\n}\nexport default function MainGame() {\n  _s();\n  const [selectedTiles, dispatch] = useReducer(actionReducer, []);\n\n  //const { size } = 9\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.gameSpace,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.tile,\n      style: {\n        gridTemplateColumns: `repeat(${parseInt(\"6\")}, 1fr)`\n      },\n      children: [...Array(parseInt('6') * parseInt('6'))].map((_, index) => /*#__PURE__*/_jsxDEV(Tile, {\n        id: index,\n        onSelect: () => dispatch({\n          type: PLAYERACTIONTYPE.SELECT_BLACK,\n          payload: index\n        })\n      }, `tile-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.button,\n      onClick: () => console.log(selectedTiles),\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(MainGame, \"xeInzyT0A1tNFGaC0N98GJN2drQ=\");\n_c = MainGame;\nvar _c;\n$RefreshReg$(_c, \"MainGame\");","map":{"version":3,"names":["useReducer","Tile","PLAYERACTIONTYPE","style","jsxDEV","_jsxDEV","actionReducer","state","action","type","payload","SELECT_BLACK","MainGame","_s","selectedTiles","dispatch","className","gameSpace","children","tile","gridTemplateColumns","parseInt","Array","map","_","index","id","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","button","onClick","console","log","_c","$RefreshReg$"],"sources":["/Users/uni/Documents/uni/awp/gomoku_react/src/pages/MainGame.tsx"],"sourcesContent":["import { useContext, useState, useReducer } from 'react'\nimport { Navigate, useNavigate, useLocation } from 'react-router-dom'\nimport { UserContext } from '../context'\nimport { Tile, Button } from '../components'\nimport { TILE_STATUS, PLAYERACTIONTYPE } from '../constants'\n\nimport style from './MainGame.module.css'\nimport { type } from 'os'\n\n\ntype SelectAction = {\n\n    type: PLAYERACTIONTYPE\n    payload: number\n\n}\n\nfunction actionReducer(state: number[], action: SelectAction) {\n    const { type, payload } = action\n    switch (type) {\n      case PLAYERACTIONTYPE.SELECT_BLACK:\n        return [...state, payload]\n      default:\n        return state\n    }\n  }\n\n\n\n\nexport default function MainGame() {\n\n    const [selectedTiles, dispatch] = useReducer(actionReducer, [])\n\n    //const { size } = 9\n  return (\n\n    <div className={style.gameSpace}>\n\n        <div className={style.tile} style={{ gridTemplateColumns: `repeat(${parseInt(\"6\")}, 1fr)`}}>\n        {[...Array(parseInt('6') * parseInt('6'))].map((_, index) => (\n            <Tile key={`tile-${index}`} id={index} onSelect={() => dispatch({ type: PLAYERACTIONTYPE.SELECT_BLACK, payload: index})} />))}\n            \n            \n            </div>\n\n            <button className={style.button} onClick={() => console.log(selectedTiles)}>\n        Confirm\n      </button>\n            \n\n</div>\n\n  )\n}\n"],"mappings":";;AAAA,SAA+BA,UAAU,QAAQ,OAAO;AAGxD,SAASC,IAAI,QAAgB,eAAe;AAC5C,SAAsBC,gBAAgB,QAAQ,cAAc;AAE5D,OAAOC,KAAK,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAWzC,SAASC,aAAaA,CAACC,KAAe,EAAEC,MAAoB,EAAE;EAC1D,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC,QAAQC,IAAI;IACV,KAAKP,gBAAgB,CAACS,YAAY;MAChC,OAAO,CAAC,GAAGJ,KAAK,EAAEG,OAAO,CAAC;IAC5B;MACE,OAAOH,KAAK;EAChB;AACF;AAKF,eAAe,SAASK,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAE/B,MAAM,CAACC,aAAa,EAAEC,QAAQ,CAAC,GAAGf,UAAU,CAACM,aAAa,EAAE,EAAE,CAAC;;EAE/D;EACF,oBAEED,OAAA;IAAKW,SAAS,EAAEb,KAAK,CAACc,SAAU;IAAAC,QAAA,gBAE5Bb,OAAA;MAAKW,SAAS,EAAEb,KAAK,CAACgB,IAAK;MAAChB,KAAK,EAAE;QAAEiB,mBAAmB,EAAG,UAASC,QAAQ,CAAC,GAAG,CAAE;MAAO,CAAE;MAAAH,QAAA,EAC1F,CAAC,GAAGI,KAAK,CAACD,QAAQ,CAAC,GAAG,CAAC,GAAGA,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACpDpB,OAAA,CAACJ,IAAI;QAAuByB,EAAE,EAAED,KAAM;QAACE,QAAQ,EAAEA,CAAA,KAAMZ,QAAQ,CAAC;UAAEN,IAAI,EAAEP,gBAAgB,CAACS,YAAY;UAAED,OAAO,EAAEe;QAAK,CAAC;MAAE,GAA5G,QAAOA,KAAM,EAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgG,CAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGxH,CAAC,eAEN1B,OAAA;MAAQW,SAAS,EAAEb,KAAK,CAAC6B,MAAO;MAACC,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAACrB,aAAa,CAAE;MAAAI,QAAA,EAAC;IAElF;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGV,CAAC;AAGN;AAAClB,EAAA,CAxBuBD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}