{"ast":null,"code":"var _jsxFileName = \"/Users/uni/Desktop/GomokuFullStack_KM/gomoku_react_frontend/src/pages/SignUpGame.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Input, Message } from '../components';\nimport { UserContext } from '../context';\nimport style from './LoginPage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n  const {\n    register\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleSignUp = async () => {\n    setErrorMessage('');\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match');\n      return;\n    }\n    const result = await register(username, password);\n    if (result === true) {\n      navigate('/');\n    } else {\n      setErrorMessage(result);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: style.container,\n    onSubmit: e => {\n      e.preventDefault();\n      handleSignUp();\n    },\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"error\",\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"username\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => {\n        setErrorMessage('');\n        setUsername(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => {\n        setErrorMessage('');\n        setPassword(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"confirmPassword\",\n      type: \"password\",\n      placeholder: \"Confirm password\",\n      value: confirmPassword,\n      onChange: e => {\n        setErrorMessage('');\n        setConfirmPassword(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !username || !password || !confirmPassword,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"VXj6QtGhpWhcBJiSX2wTr4eYAuo=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["useContext","useState","useNavigate","Button","Input","Message","UserContext","style","jsxDEV","_jsxDEV","SignUp","_s","register","navigate","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","handleSignUp","result","className","container","onSubmit","e","preventDefault","children","variant","message","fileName","_jsxFileName","lineNumber","columnNumber","name","placeholder","value","onChange","target","type","disabled","_c","$RefreshReg$"],"sources":["/Users/uni/Desktop/GomokuFullStack_KM/gomoku_react_frontend/src/pages/SignUpGame.tsx"],"sourcesContent":["import { useContext, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Button, Input, Message } from '../components'\nimport { UserContext } from '../context'\nimport style from './LoginPage.module.css'\n\nexport default function SignUp() {\n  const { register } = useContext(UserContext)\n  const navigate = useNavigate()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleSignUp = async () => {\n    setErrorMessage('')\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match')\n      return\n    }\n    const result = await register(username, password)\n    if (result === true) {\n      navigate('/')\n    } else {\n      setErrorMessage(result)\n    }\n  }\n\n  return (\n    <form\n      className={style.container}\n      onSubmit={(e) => {\n        e.preventDefault()\n        handleSignUp()\n      }}\n    >\n      {errorMessage && <Message variant=\"error\" message={errorMessage} />}\n      <Input\n        name=\"username\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => {\n          setErrorMessage('')\n          setUsername(e.target.value)\n        }}\n      />\n      <Input\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => {\n          setErrorMessage('')\n          setPassword(e.target.value)\n        }}\n      />\n\n      <Input\n        name=\"confirmPassword\"\n        type=\"password\"\n        placeholder=\"Confirm password\"\n        value={confirmPassword}\n        onChange={(e) => {\n          setErrorMessage('')\n          setConfirmPassword(e.target.value)\n        }}\n      />\n      <Button\n        type=\"submit\"\n        disabled={!username || !password || !confirmPassword}\n      >\n        Sign Up\n      </Button>\n    </form>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}